from typing import Any

class Unit:
	def __rmul__(self, other: float) -> Period: ...

class Period:
	def to_seconds(self) -> float: ...

class ScheduledFormula: ...

class Formula:
	def every(self, period: Period) -> ScheduledFormula: ...
	def __matmul__(self, period: Period) -> ScheduledFormula: ...
	# arithmetic
	def __add__(self, other: Any) -> Formula: ...
	def __sub__(self, other: Any) -> Formula: ...
	def __mul__(self, other: Any) -> Formula: ...
	def __truediv__(self, other: Any) -> Formula: ...
	def __pow__(self, other: Any) -> Formula: ...
	# comparisons
	def __lt__(self, other: Any) -> Formula: ...
	def __le__(self, other: Any) -> Formula: ...
	def __gt__(self, other: Any) -> Formula: ...
	def __ge__(self, other: Any) -> Formula: ...
	# boolean
	def __and__(self, other: Any) -> Formula: ...
	def __or__(self, other: Any) -> Formula: ...
	def __invert__(self) -> Formula: ...

class Stream:
	def __init__(self, type: Any | None = None, name: str | None = None) -> None: ...
	def last(self, n: int = 1) -> Formula: ...
	def __getattr__(self, name: str) -> 'Stream': ...

class InputStream(Stream):
	def __init__(self, type: Any | None = None, name: str | None = None) -> None: ...

class State: ...

class GLOBAL:
	time: float

s: Unit
ms: Unit
m: Unit
h: Unit

def timestamp(stream: Stream) -> Stream: ...
def H(window: Any, expr: Any) -> Formula: ...
def multiplex_id(output: Any, id_from: Any | None = None, eos_from: Any | ScheduledFormula | Formula | None = None) -> Any: ...
